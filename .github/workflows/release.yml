name: Generate Release Note

on:
  push:
    tags:
      - '*'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Milestone Bug Issues
        id: milestone-bug-issues
        run: |
          milestone_number=2.0.1
          curl -sSL \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues?q=milestone=${milestone_number}&labels=kind/bug" \
            > milestone-bug-issues.json
      - name: Get Milestone Enhancement Issues
        id: milestone-issues
        run: |
          curl -sSL \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues?q=milestone=${milestone_number}&labels=kind/enhancement" \
            > milestone-enhancement-issues.json
      - name: Get Milestone Feature Issues
        id: milestone-feature-issues
        run: |
          curl -sSL \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues?q=milestone=${milestone_number}&labels=kind/feature" \
            > milestone-feature-issues.json
      - name: Generate Release Notes
        id: generate-release-notes
        run: |
          milestone-feature-issues=$(cat milestone-feature-issues.json)
          release_notes="## ⭐ Feature"
          if [[ $(echo "${milestone-feature-issues}" | jq '. | length') -eq 0 ]]; then
            echo "返回值是空数组 []"
          else
            for issue in $(echo "${milestone-feature-issues}" | jq -r '.[] | @base64'); do
              _jq() {
                echo ${issue} | base64 --decode | jq -r ${1}
              }
              release_notes+="* $(_jq '.title') (#$(_jq '.number'))\n"
            done
          fi
#          milestone-enhancement-issues=$(cat milestone-enhancement-issues.json)
#          release_notes+="## 📈 Improvements"
#          if [[ $(echo "${milestone-enhancement-issues}" | jq '. | length') -eq 0 ]]; then
#            echo "返回值是空数组 []"
#          else
#            for issue in $(echo "${milestone-enhancement-issues}" | jq -r '.[] | @base64'); do
#              _jq() {
#                echo ${issue} | base64 --decode | jq -r ${1}
#              }
#              release_notes+="- $(_jq '.title') (#$(_jq '.number'))\n"
#            done
#          fi
#          milestone-bug-issues=$(cat milestone-bug-issues.json)
#          release_notes+="## 🐞 Fixes"
#          if [[ $(echo "${milestone-bug-issues}" | jq '. | length') -eq 0 ]]; then
#            echo "返回值是空数组 []"
#          else
#            for issue in $(echo "${milestone-bug-issues}" | jq -r '.[] | @base64'); do
#              _jq() {
#                echo ${issue} | base64 --decode | jq -r ${1}
#              }
#              release_notes+="- $(_jq '.title') (#$(_jq '.number'))\n"
#            done
#          fi
          echo "Generated Release Notes:"
          echo "$release_notes"